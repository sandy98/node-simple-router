#!/usr/bin/env node
 
// Generated by CoffeeScript 1.6.3
(function() {
  var cs, filename, fs, full_filename, js, text, _ref, _ref1;

  cs = "#!/usr/bin/env coffee";

  cs += "\n\n";

  cs += "try\n";

  cs += "  Router = require 'node-simple-router'\n";

  cs += "catch e\n";

  cs += "  Router = require '../lib/router'\n\n";

  cs += "http = require 'http'\n";

  cs += "router = Router(list_dir: true)\n";

  cs += "#\n";

  cs += "#Example routes\n";

  cs += "#\n";

  cs += "router.get \"/\", (request, response) ->\n";

  cs += "  response.end 'Home'\n\n";

  cs += "router.get \"/hello\", (req, res) ->\n";

  cs += " res.end 'Hello, World!, Hola, Mundo!'\n\n";

  cs += "router.get \"/users\", (req, res) ->\n";

  cs += "  res.writeHead(200, {'Content-type': 'text/html'})\n";

  cs += "  res.end '<h1 style=\"color: navy; text-align: center;\">Active members registry</h1>'\n\n";

  cs += "router.get \"/users/:id\", (req, res) ->\n";

  cs += "  res.writeHead(200, {'Content-type': 'text/html'})\n";

  cs += "  res.end \"<h1>User No: <span style='color: red;'>\" + req.params.id + \"</span></h1>\"\n\n";

  cs += "#\n";

  cs += "#End of example routes\n";

  cs += "#\n\n\n";

  cs += "#Ok, just start the server!\n\n";

  cs += "argv = process.argv.slice 2\n\n";

  cs += "server = http.createServer router\n\n";

  cs += "server.on 'listening', ->\n";

  cs += "  addr = server.address() or {address: '0.0.0.0', port: argv[0] or 8000}\n";

  cs += "  router.log \"Serving web content at \" + addr.address + \":\" + addr.port  \n\n";

  cs += "process.on \"SIGINT\", ->\n";

  cs += "  server.close()\n";

  cs += "  router.log ' '\n";

  cs += "  router.log \"Server shutting up...\"\n";

  cs += "  router.log ' '\n";

  cs += "  process.exit 0\n\n";

  cs += "server.listen if argv[0]? and not isNaN(parseInt(argv[0])) then parseInt(argv[0]) else 8000\n";

  js = "#!/usr/bin/env node\n\n// Generated by CoffeeScript 1.4.0\n(function() {\nvar Router, argv, http, router, server;\n\ntry {\nRouter = require('node-simple-router');\n} catch (e) {\nRouter = require('../lib/router');\n}\n\nhttp = require('http');\n\nrouter = Router({\nlist_dir: true\n});\n\n/*\nExample routes\n*/\n\nrouter.get(\"/\", function(req, res) {\n    return res.end(\"Home\");\n    });\n\nrouter.get(\"/hello\", function(req, res) {\n  return res.end(\"Hello, World!, Hola, Mundo!\");\n});\n\nrouter.get(\"/users\", function(req, res) {\n  res.writeHead(200, {\n  'Content-type': 'text/html'\n  });\n  return res.end(\"<h1 style='color: navy; text-align: center;'>Active members registry</h1>\");\n});\n\nrouter.get(\"/users/:id\", function(req, res) {\n  res.writeHead(200, {\n    'Content-type': 'text/html'\n  });\n  return res.end(\"<h1>User No: <span style='color: red;'>\" + req.params.id + \"</span></h1>\");\n});\n\n/*\nEnd of example routes\n*/\n\n\nargv = process.argv.slice(2);\n\nserver = http.createServer(router);\n\nserver.on('listening', function() {\n  var addr;\n  addr = server.address() || {\n    address: '0.0.0.0',\n    port: argv[0] || 8000\n  };\n  return router.log(\"Serving web content at \" + addr.address + \":\" + addr.port);\n});\n\nprocess.on(\"SIGINT\", function() {\n  server.close();\n  router.log(\" \");\n  router.log(\"Server shutting up...\");\n  router.log(\" \");\n  return process.exit(0);\n});\n\nserver.listen((argv[0] != null) && !isNaN(parseInt(argv[0])) ? parseInt(argv[0]) : 8000);\n\n}).call(this);\n";

  fs = require('fs');

  filename = ((_ref = process.argv[2]) != null ? _ref.toLowerCase() : void 0) === 'js' ? 'server.js' : 'server.coffee';

  full_filename = "" + (process.cwd()) + "/" + filename;

  text = ((_ref1 = process.argv[2]) != null ? _ref1.toLowerCase() : void 0) === 'js' ? js : cs;

  fs.writeFileSync(full_filename, text);

  fs.chmodSync(full_filename, 0x1ed);

}).call(this);
