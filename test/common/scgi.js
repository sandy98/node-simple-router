// Generated by CoffeeScript 1.6.3
(function() {
  var Router, argv, child, childPath, domain, fs, http, net, querystring, router, server, spawn;

  Router = require('../../src/router');

  spawn = require('child_process').spawn;

  domain = require('domain');

  querystring = require('querystring');

  net = require('net');

  http = require('http');

  router = Router({
    list_dir: true
  });

  fs = require('fs');

  router.get("/", function(request, response) {
    return router.scgi_pass('/tmp/hello_scgi_py.sk', request, response);
  });

  router.get("/hellonode", function(request, response) {
    return router.scgi_pass('/tmp/node_scgi.sk', request, response);
  });

  childPath = "" + __dirname + "/public/scgi/hellonode/hello.coffee";

  if (fs.existsSync(childPath)) {
    router.log("Going to spawn child " + childPath);
    child = spawn(childPath, []);
    child.stdout.pipe(process.stdout);
  }

  argv = process.argv.slice(2);

  server = http.createServer(router);

  server.on('listening', function() {
    var addr;
    addr = server.address() || {
      address: '0.0.0.0',
      port: argv[0] || 8000
    };
    return router.log("Serving web content at " + addr.address + ":" + addr.port);
  });

  process.on("SIGINT", function() {
    server.close();
    router.log(' ');
    router.log("Server shutting up...");
    router.log(' ');
    return process.exit(0);
  });

  server.listen((argv[0] != null) && !isNaN(parseInt(argv[0])) ? parseInt(argv[0]) : 8000);

}).call(this);
